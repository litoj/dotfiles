#!/usr/bin/bash

setTheme() {
	gsettings set org.gnome.desktop.interface color-scheme prefer-${1,,}
	gsettings set org.gnome.desktop.interface gtk-theme ${1^}
	sed "s/Dark/${1^}/" ~/.config/gtk-3.0/theme.ini >/tmp/my/gtk3rc
	sed '1d;s/=\([a-z].*\|[A-Z][^A-Z].*\)/="\1"/' /tmp/my/gtk3rc >/tmp/my/gtk2rc
	ln -sf ~/.config/qt6ct/colors/$1.conf /tmp/my/qt
	ln -sf ~/.config/rofi/$1.rasi /tmp/my/rofi

	shopt -s nullglob
	local todo=(/dev/pts/*)
	if [[ $todo ]]; then # use nerdcontrast to generate terminal colors
		nvim -i NONE --headless -c "lua require'nerdcontrast'.setup{opacity='cc'}" -c q 2>/tmp/term >/dev/null
		for f in "${todo[@]}"; do
			[[ -O $f ]] && echo "$(</tmp/term)" >"$f"
		done
		rm /tmp/term
	fi

	local msg="\x94\x0\x1\xafnvim_set_option\x92\xaabackground\xa${#1}$1"
	# light=${msg}5light
	# dark=${msg}4dark
	# [[ $1 == light ]] && msg=("$dark" "$light") || msg=("$light" "$dark")

	for f in /run/user/$(id -u)/nvim.*.0; do
		local pid=${f#*.}
		if ps -p ${pid%.*} >/dev/null; then
			# # first set to the opposite then wanted to force nvim update
			printf "$msg" | ncat -U "$f"
			# sleep 0.5
			# printf "${msg[1]}" | ncat -U "$f"
		fi
	done
}

updateTheme() {
	pkill -RTMIN+20 i3blocks
	if ((STAT[0] <= x && x < STAT[1])); then
		next=${STAT[1]}
		[[ -e /tmp/my/day ]] || {
			touch /tmp/my/day
			setTheme light
			swaymsg -q 'set $bg #ffffff; set $fg #000000'
		}
	else
		((x > STAT[1])) && next=1440 || next=${STAT[0]}
		[[ -e /tmp/my/day ]] && {
			rm /tmp/my/day
			setTheme dark
			swaymsg -q 'set $bg #101010; set $fg #ffffff'
		}
	fi
	swaymsg -q "$(grep 'colors {' -A 10 ~/.config/sway/20_layout.swayconf |
		grep '\$' -B 10 | sed '1d;/^\s*#/d;s/^/bar bar-0 colors/')"
	prev=$x
}

if [[ $1 ]]; then
	STAT=(0 1)
	[[ $1 == light || ($1 == toggle && ! -e /tmp/my/day) ]] && x=0 || x=1
	updateTheme
	exit 0
fi

STAT=($(sunwait list 47.8N 13E | sed 's/:/ /g;s/,//' | awk '{print($1*60+$2,$3*60+$4)}'))
next=0

update() {
	x=($(date +"%H %M %S"))
	echo "ï€— ${x[0]}:${x[1]}"
	((x[0] = ${x[0]#0} * 60 + ${x[1]#0}))
}

while :; do
	update
	((next < x || x < prev)) && updateTheme >/dev/null
	sleep $((60 - ${x[2]#0}))
done
