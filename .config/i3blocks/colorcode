#!/usr/bin/bash
# This is a color generator, use RGB for rainbow, RG for red-to-green, GruvRG for gruvbox accent
[[ $(</sys/class/power_supply/BAT0/status) == Discharging ]] && exit 0

# dummy for no effect, defaults to GruvRG
if [[ ! $1 =~ ^[0-9]+$ ]]; then
	echo '#bd40b7'
	exit 0
elif (($1 > 200 || $1 < 0)); then
	declare -i x=0
elif (($1 > 100)); then
	declare -i x=200-$1
else
	declare -i x=$1
fi

# currently disabled for my use
# exit 0

#x scaled to [0-190] for avoiding edge-brightness colors

# normal 0=red 100=green
rg() {
	((x < 50)) && printf '#%02x%02x%02x\n' 220 $((x * 38 / 10 + 30)) 30 ||
		printf '#%02x%02x%02x\n' $(((100 - x) * 38 / 10 + 30)) 220 30
}

# rgb(84,160,21)
# rgb(204,40,21)
# 120 120 = 360
# #cc2815 #cc6415 #cca015 #90a015 #54a015
gruvrg() {
	if ((x < 50)); then
		printf '#%02x%02x%02x\n' 204 $((x * 24 / 10 + 40)) 21
	else
		printf '#%02x%02x%02x\n' $(((100 - x) * 24 / 10 + 84)) 160 21
	fi
}

#rainbow mod 0=red 40=green 80=blue 100=purple
rainbow() {
	((x < 20)) && printf '#%02x%02x%02x\n' 220 $((x * 95 / 10 + 30)) 30 ||
		((x < 40)) && printf '#%02x%02x%02x\n' $(((40 - x) * 95 + 30)) 220 30 ||
		((x < 60)) && printf '#%02x%02x%02x\n' 30 220 $(((x - 40) * 95 / 10 + 30)) ||
		((x < 80)) && printf '#%02x%02x%02x\n' 30 $(((80 - x) * 95 / 10 + 30)) 220 ||
		printf '#%02x%02x%02x\n' $(((x - 80) * 95 / 10 + 30)) 30 220
}

case "$2" in
	"RGB") rainbow ;;
	"RG") rg ;;
	"GruvRG") gruvrg ;;
	"dummy") exit 0 ;;
	*) gruvrg ;;
esac
