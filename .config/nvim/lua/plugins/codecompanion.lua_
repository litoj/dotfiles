local M = {
	strategies = {
		chat = {
			adapter = {
				name = 'copilot',
				model = 'gpt-4.1',
			},
		},
		inline = {
			adapter = {
				name = 'copilot',
				model = 'claude-sonnet-4.5',
			},
		},
	},
	display = {
		chat = {
			show_settings = true,
			icons = {
				tool_success = 'ó°¸ž ',
			},
			fold_context = true,
		},
		inline = {
			window = { layout = 'float' },
		},
	},
	adapters = {
		http = {
			ollama = function()
				return require('codecompanion.adapters').extend('ollama', {
					schema = {
						model = {
							default = 'qwen3:latest',
						},
						num_ctx = {
							default = 20000,
						},
					},
				})
			end,
		},
	},
}

return {
	'olimorris/codecompanion.nvim',
	dependencies = 'nvim-lua/plenary.nvim',
	cmd = { 'CodeCompanion', 'CodeCompanionCmd', 'CodeCompanionChat', 'CodeCompanionActions' },
	keys = { ' cc' },
	config = function()
		require('codecompanion').setup(M)
		require 'autocommands'('FileType', function(state)
			vim.defer_fn(function() vim.wo.conceallevel = 2 end, 10)
		end, 'codecompanion')
		map({ 'n', 'x' }, '<Leader>cl', '<Cmd>CodeCompanion<CR>')
		map({ 'n', 'x' }, '<Leader>cc', '<Cmd>CodeCompanionChat<CR>')
		map({ 'n', 'x' }, '<Leader>ca', '<Cmd>CodeCompanionActions<CR>')
	end,
}
