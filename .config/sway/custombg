#!/usr/bin/bash

current() {
	ps -C swaybg -o args | sed -n 's/.* -i \(.*\.[^. ]\+\).*/\1/p'
}

STATE_FILE=$HOME/.local/state/nextbg
BG_DIR=$HOME/Pictures/screen

pick() {
	local current=${current:-$(current)} pick dir
	[[ $DIRECTION == prev* ]] && dir=(-B head) || dir=(-A tail)
	if [[ $current ]]; then # move to next image
		pick=$BG_DIR/$(
			ls "$BG_DIR" |
				grep -F "${current##*/}" ${dir[0]} $((SKIP + 1)) |
				${dir[1]} -n 1
		)
		[[ $pick == $current ]] && pick=("$BG_DIR"/*) # reached last -> start from first
	elif [[ ! -f $STATE_FILE ]]; then              # initiate sequence
		pick=("$BG_DIR"/*)
	else # pick saved bg or the closest to its name
		pick=$(<"$STATE_FILE")
		if [[ ! -f $pick ]]; then
			pick=$BG_DIR/$({
				echo "${pick##*/}"
				ls "$BG_DIR"
			} | sort | grep -F "${pick##*/}" ${dir[0]} $((SKIP + 1)) | ${dir[1]} -n 1)
		fi
	fi

	echo "$pick"
}

set() {
	if [[ $1 ]]; then
		[[ $1 == /* ]] && bg=$1 || bg="$PWD/$1"
	else
		bg=$(pick)
	fi

	toKill=$(ps -C swaybg -o pid | tail -n +2)
	swaybg -i "$bg" -m fill &>/dev/null &
	sleep 0.25 # updating the image isn't immediate, so we wait to avoid blank bg flash
	kill $toKill 2>/dev/null
}

save() {
	current=$(current)
	[[ $current ]] && pick >"$STATE_FILE"
}

autosave() {
	hour=$(date +%H)
	if ((${hour#0} > 20)); then
		save
	fi
}

if declare -f "$1" &>/dev/null; then
	$1
else
	if [[ $1 == next || $1 == prev* ]]; then
		DIRECTION=$1
		shift
	fi

	set "$@"
fi
