#!/usr/bin/bash
# simpler=faster xdg-open replacement
LC_ALL=C

[[ $1 == -c ]] && CFG=$2 && shift 2 || CFG=${XDG_CONFIG_HOME-$HOME/.config}/open.conf.sh

if [[ $1 == open-sh://* ]]; then # for YT-to-external browser redirect
	arg=${1#open-sh://}
	set "${arg/\/\//:\/\/}" # firefox doesn't pass through ':' in the url path
fi

[[ $1 == file://* ]] && arg=$(echo -n "${1#file://}" | urlencode -d) || arg=("$@")
if [[ $arg == *://* ]]; then
	URI=${arg%%:*}:
else
	[[ $arg == *.* ]] && EXT=.${arg##*.} || EXT=.
fi

run() {
	[[ -e $arg && $arg != /* ]] && for ((i = ${#arg[@]} - 1; i >= 0; i--)); do
		arg[$i]="$PWD/${arg[$i]}"
	done
	local cmd=$1 # bash fn()s require the '@' prefix to work
	[[ $cmd == @* || ${BLOCKING:-$TERM_BLOCKING} == 1 && -t 0 && -t 1 ]] ||
		cmd="${TERMINAL:-xterm} $cmd"
	if [[ $BLOCKING == 1 || $cmd != @* && $TERM_BLOCKING == 1 ]]; then
		${cmd#@} "${arg[@]}"
	elif declare -F "${cmd#@}" &>/dev/null; then # run functions in-place
		${cmd#@} "${arg[@]}" &
	else
		setsid ${cmd#@} "${arg[@]}" &>/dev/null &
		# swaymsg exec ${cmd#@} "${arg[@]}" # to generate xdga token for autofocus to work
	fi
	(($?)) && return 1 || exit 0
}

# prefix gui/bg apps with '@', $1=cmd
try() {
	local app="$1" match
	shift
	while (($# && !match)); do
		case "$1" in
			.*) [[ $EXT == $1 ]] && match=1 ;;
			+*) [[ +${MIME:=$(file -Lb --mime-type "$arg")} == $1* ]] && match=1 ;;
			*:) [[ $URI == $1 ]] && match=1 ;;
			*) [[ $arg =~ $1 ]] && match=1 ;;
		esac
		shift
	done
	! ((match)) || run "$app"
}

[[ -f $CFG ]] && . "$CFG" # config calls try() for given apps with listed allowed files

[[ -d $arg ]] && run "${EXPLORER:-ranger}"
try "$EDITOR" +text +*empty +*json
run "${FALLBACK:-${BROWSER:-false}}" # using ':-' because empty value would execute $1 itself
